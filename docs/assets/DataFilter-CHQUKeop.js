import{d as a,C as p}from"./__uno-D8LQNY-Y.js";var c=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=(t,i,s,l)=>{for(var e=l>1?void 0:l?u(i,s):i,o=t.length-1,n;o>=0;o--)(n=t[o])&&(e=(l?n(i,s,e):n(e))||e);return l&&e&&c(i,s,e),e};let r=class extends p{filtersTab;keys;columns;sortKeys=[];get isLastFilter(){return this.i==this.filters.length-1}filters=[];i;f;connectedCallback(){this.innerHTML=`<ul class="menu bg-base-200 rounded-box"><li><details ref="filtersTab"><summary>筛选器</summary><ul><template c-for="f, i; filters"><li><div class="block join"><select class="input input-bordered input-sm join-item" c-model="f.key" title="筛选列"
								.disabled="f.op<0"><template c-for="col, i; columns"><option value="\${keys[i]}">$col</option></template></select><select class="input input-bordered input-sm join-item" c-model="f.op" title="筛选操作"><option value="0">等于</option><option value="1">不等于</option><option value="2">大于</option><option value="3">小于等于</option><option value="4">大于等于</option><option value="5">小于</option><option value="6">包含</option><option value="7">不包含</option><option value="8">匹配正则</option><option value="9">不匹配正则</option></select><input class="join-item input input-bordered input-sm w-24" :class="input-error: !f.valid; hidden: f.op==8 || f.op==9"
									c-model.lazy="f.value" @change.capture="checkValidity" title="筛选" type="search"><select class="join-item input input-bordered input-sm" c-model="f.conj" title="连接词" .disabled="isLastFilter"><option value="0">且</option><option value="1">或</option></select><button class="join-item btn btn-primary btn-sm" @click="deleteFilter(i)" title="删除筛选器">×</button></div></li></template></ul><button class="btn btn-primary btn-sm" :class="hidden: filters.length==9" @click="addFilter()" title="添加筛选器">+</button><button class="btn btn-error btn-sm" :class="hidden: filters.length==0"
				@click="clearFilters" title="清空筛选器">清空筛选器</button></details></li></ul>`,super.connectedCallback(),this.filtersTab.addEventListener("toggle",t=>{t.target.open&&!this.filters.length&&this.addFilter(6)})}checkValidity(t){try{this.f.op>1&&RegExp(this.f.value),t.target.setCustomValidity("")}catch{t.target.setCustomValidity("正则表达式错误")}}addFilter(t=0){this.filters.push({key:this.keys[0],op:t,value:"",conj:0,valid:!0})}deleteFilter(t){this.filters.splice(t,1)}clearFilters(){this.filters=[]}addSortKey(){this.sortKeys.push({index:0,dir:1})}deleteSortKey(t){this.sortKeys.splice(t,1)}clearSortKeys(){this.sortKeys=[]}};r=d([a("data-filter")],r);export{r as DataFilter};
